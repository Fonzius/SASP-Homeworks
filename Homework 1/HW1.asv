
clc;
clear all;
close all;

%% Legend
% p: number past samples
% n: current time
% k: k_th coefficient
% M: segment length
% a: filter coefficients

% speech: 5ms, 

%% double check by LPC-matlab
% [signal, fs] = audioread("piano.wav");
% 
% M = floor(5e-3*fs);
% 
% num_segment = ceil(length(signal)/M);
% num_pad = num_segment* M -length(signal);
% paddedSignal = padarray(signal,[num_pad 0],0,'post');
% s = reshape(paddedSignal,M,num_segment)';
% s_fft = fft(paddedSignal);
% 
% pred = zeros(size(s));
% err = zeros(size(s));
% 
% for ss = 1:num_segment
%     [pred(ss,:) err(ss,:)] = lpc(s(ss,:), 219);
% end
% 
% 
% H = zeros(size(s));
% 
% for ss = 1:num_segment
%     pred_index = freqz(1, pred(ss,:),220);
%     H_current = fftshift(pred_index);
%     H(ss,:) = H_current';
% end
% 
% A = 1./H;
% 
% A_reshape = reshape(A',[848980 1]);
% H_reshape = reshape(H',[848980 1]);
% 
% error_freq = A_reshape .* s_fft;
% error_time = ifft(error_freq, fs);



%%%%%%% chatgpt
% % Obtain LPC coefficients
% LPC_order = 12;
% LPC_coeffs = lpc(x, LPC_order);
% 
% % Obtain the prediction filter
% prediction_filter = dfilt.df1(LPC_coeffs);
% 
% % Filter the original signal using the prediction filter
% residual = filter(prediction_filter.Numerator, 1, x);
% 
% % Obtain the LPC synthesis filter
% synth_coeffs = [1, -LPC_coeffs(2:end)];
% synth_filter = dfilt.df2sos(synth_coeffs);
% 
% % Synthesize the LPC residual using the LPC synthesis filter
% predicted = filter(synth_filter.Numerator, synth_filter.Denominator, residual);
% 
% 


% sound(abs(error_time))
% audioOut =zeros(size(s));
% for ss = 1:num_segment
%     audioOut(ss,:) = filter([0 -pred(ss,2:end)], 1, s(ss,:));
% end
% 
% audioOut_reshape = reshape(audioOut',[848980 1]);
% 
% sound(audioOut_reshape, 44100); 


%%
% [hPiano, ePiano] = LPCFilter("piano.wav");
% [hSpeech, eSpeech] = LPCFilter("speech.wav");
[Hpiano, epiano] = LPCFilter("piano.wav");
[Hspeech, espeech] = LPCFilter("speech.wav");

talingHspeech * 


% a_exp1 = ones(size(a,1),1);
% a_exp =[a_exp1 -1.*a];
% 
% 
% H = fftshift(freqz(1, a_exp));

% H = zeros(size(a_exp));
% for ii = 1:size(a_exp,1)
%     H(ii,:) = freqz(1, a_exp(ii,:), 220);
% end
% A = 1./H;
% 
% a_exp0 = zeros(size(a,1),1);
% a_exp_p =[a_exp0 a];
% 
% P = zeros(size(a_exp_p));
% for ii = 1:size(a_exp_p,1)
%     P(ii,:) = freqz(a_exp_p(ii,:),1,220);
% end



